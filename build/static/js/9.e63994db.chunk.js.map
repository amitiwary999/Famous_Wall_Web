{"version":3,"sources":["redux/action/ProfileAction.js","img/unicoon.png","view/login/Login.js"],"names":["fetchProfile","data","Promise","resolve","reject","requestBody","params","axios","get","then","res","Error","catch","error","fetchSelfProfile","token","defaults","headers","common","Authorization","console","addUserProfile","post","updateProfile","patch","module","exports","Login","props","useState","email","setEmail","loader","setLoader","loginStatus","useSelector","state","login","dispatch","useDispatch","useEffect","PENDING","SUCCESS","closeLogin","FAILURE","sendUserInfo","firebaseUser","getIdToken","photo","photoURL","addProfile","name","displayName","dp","profileId","generateProfileId","log","firebase","auth","signOut","isOpen","toggle","className","md","src","logo","alt","style","height","width","type","onChange","e","target","value","id","placeholder","required","color","onClick","actionCodeSettings","url","window","location","href","handleCodeInApp","sendSignInLinkToEmail","provider","GoogleAuthProvider","signInWithPopup","result","user"],"mappings":"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","file":"static/js/9.e63994db.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\n\nexport const fetchProfile = (data) => new Promise((resolve, reject) => {\n  const requestBody = { params: data };\n  axios.get('profile', requestBody)\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject(Error('no user data'));\n      }\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n\nexport const fetchSelfProfile = (token) => new Promise((resolve, reject) =>{\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.get('profile')\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject(Error('no user data'));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n      reject(error);\n    });\n});\n\nexport const addUserProfile = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.post('profile', data)\n    .then((res) => {\n      resolve('success');\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n\nexport const updateProfile = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.patch('profile', data)\n    .then((res) => {\n      resolve('success');\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n","module.exports = __webpack_public_path__ + \"static/media/unicoon.d0d24013.png\";","/* eslint-disable no-shadow */\n/* eslint-disable no-console */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Col, Card, Input, Button, Modal, ModalBody,\n} from 'reactstrap';\nimport {\n  FAILURE, PENDING, SUCCESS, generateProfileId,\n} from '../../common/util';\nimport firebase from '../../firebase/Firebase';\nimport logo from '../../img/unicoon.png';\nimport Spinner from '../../firebase/LoadingSpinner';\nimport { addUserProfile } from '../../redux/action/ProfileAction';\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('');\n  const [loader, setLoader] = useState(false);\n\n  const { loginStatus } = useSelector((state) => ({\n    loginStatus: state.login.loginStatus,\n  }));\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (loginStatus === PENDING) {\n      setLoader(true);\n    } else if (loginStatus === SUCCESS) {\n      setLoader(false);\n      props.closeLogin();\n    } else if (loginStatus === FAILURE) {\n      setLoader(false);\n    }\n  }, [loginStatus]);\n\n  const handleChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const sendEmailLink = () => {\n    if (email) {\n      const actionCodeSettings = {\n        // URL you want to redirect back to. The domain (www.example.com) for this\n        // URL must be whitelisted in the Firebase Console.\n        url: `${window.location.href}/${email}`,\n        handleCodeInApp: true,\n      };\n\n      firebase\n        .auth()\n        .sendSignInLinkToEmail(email, actionCodeSettings)\n        .then(() => {\n\n        })\n        .catch((error) => {\n          console.log('erroe send email', error);\n          // Some error occurred, you can inspect the code: error.code\n        });\n    } else {\n      console.log('no eamil');\n    }\n  };\n\n  const logoutUser = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {})\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const addProfile = (token, data) => {\n    setLoader(true);\n    addUserProfile(token, data)\n      .then(() => {\n        setLoader(false);\n        props.closeLogin();\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoader(false);\n      });\n  };\n\n  const sendUserInfo = (firebaseUser) => {\n    firebaseUser.getIdToken().then((token) => {\n      const { email } = firebaseUser;\n      const photo = firebaseUser.photoURL;\n      const fullName = firebaseUser.displayName;\n      const profileId = generateProfileId(email);\n      const data = {\n        name: fullName,\n        dp: photo,\n        email,\n        profileId,\n      };\n\n      addProfile(token, data);\n    }).catch((error) => {\n      console.log(error);\n      logoutUser();\n    });\n  };\n\n  const loginWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    dispatch({ type: 'LOGIN_PENDING' });\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        const { user } = result;\n        sendUserInfo(user);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const close = () => {\n    props.closeLogin();\n  };\n\n  return (\n    <Modal isOpen toggle={close} className=\"modal-lg\">\n      <ModalBody>\n        <div className=\"d-flex\">\n          <Col md=\"8\" className=\"text-center justify-content-center align-self-center offset-md-2\">\n            <Card className=\"pt-2 pb-2\">\n              <img src={logo} className=\"mx-auto\" alt=\"Famous wall\" style={{ height: '180px', width: '180px' }} />\n\n              <div className=\"text-center mt-4\">\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  onChange={handleChange}\n                  value={email}\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  required\n                  style={{ width: '85%' }}\n                  className=\"mx-auto\"\n                />\n\n                <Button\n                  className=\"mx-auto mt-2\"\n                  style={{ width: '200px' }}\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={sendEmailLink}\n                >\n                  Send me a login link\n                </Button>\n                <p className=\"font-weight-bold mt-6\">OR</p>\n                <Button\n                  className=\"mx-auto mt-2\"\n                  style={{ width: '200px' }}\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={loginWithGoogle}\n                >\n                  Login using Google\n                </Button>\n              </div>\n            </Card>\n          </Col>\n          {loader && <Spinner />}\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}