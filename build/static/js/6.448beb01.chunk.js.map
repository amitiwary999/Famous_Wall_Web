{"version":3,"sources":["redux/action/ProfileAction.js","img/unicoon.png","redux/action/homeAction.js","view/login/Login.js","view/home/FamousCardView.js","view/home/UploadMedia.js","view/home/SetVideoCallTime.js","view/home/VideoRequestList/VideoRequestLists.js","view/home/home.jsx"],"names":["fetchProfile","data","Promise","resolve","reject","requestBody","params","axios","get","then","res","Error","catch","error","fetchSelfProfile","token","defaults","headers","common","Authorization","console","addUserProfile","post","updateProfile","patch","module","exports","fetchFamousPosts","lastItemId","dispatch","type","nextKey","limit","length","lastItemPostId","postId","payload","log","likeOrUnlikePost","incr","pos","increment","JSON","stringify","response","fetchVideoRequest","fetchVideoInvite","postVideoCallRequest","deleteVideoCallRequest","delete","Login","props","useState","email","setEmail","loader","setLoader","loginStatus","useSelector","state","login","useDispatch","useEffect","PENDING","SUCCESS","closeLogin","FAILURE","sendUserInfo","firebaseUser","getIdToken","photo","photoURL","addProfile","name","displayName","dp","profileId","generateProfileId","firebase","auth","signOut","isOpen","toggle","className","md","src","logo","alt","style","height","width","onChange","e","target","value","id","placeholder","required","color","onClick","actionCodeSettings","url","window","location","href","handleCodeInApp","sendSignInLinkToEmail","provider","GoogleAuthProvider","signInWithPopup","result","user","FamousCardView","currentUser","useContext","AuthContext","mimeType","mediaUrl","desc","userDp","userName","date","isLiked","creatorId","Col","Card","CardBody","maxWidth","cursor","showProfile","fontSize","moment","fromNow","includes","IMAGE_MEDIA","VIDEO_MEDIA","controls","autoPlay","object-fit","Row","showLogin","fill","sendRequest","Badge","size","UploadMedia","mediaType","postText","setPostText","selectedMediaFile","file","loadMedia","setLoadMedia","mediaSrc","setMediaSrc","close","closeSelectedMedia","reader","FileReader","onabort","onerror","onload","binaryStr","blob","Blob","URL","createObjectURL","readAsArrayBuffer","Modal","ModalHeader","ModalBody","event","updatePostText","Button","uploadMedia","userId","uid","currentDate","Date","now","getHash","mediaThumbUrl","sendPost","Spinner","SetVideoCallTime","callDate","setCallDate","callTime","setCallTime","requestorId","videoRequestIndex","Label","for","options","minDate","enableTime","noCalendar","dateFormat","ModalFooter","selectedDate","format","selectTime","utc","isBefore","valueOf","notify","dateTime","confirmTime","VideoRequestLists","videoRequests","videolist","item","index","status","profileImg","key","marginTop","marginBottom","updateRequest","deleteRequest","updatedAt","joinCallRequest","map","Home","history","useHistory","famousPosts","home","hasMoreItems","loadItemStatus","selectedMediaType","setSelectedMediaType","setSelectedMediaFile","showSelectedMediaCard","setShowSelectedMediaCard","setShowLogin","showLoader","setShowLoader","videoRequest","setVideoRequest","videoRequestSent","setVideoRequestSent","setRequestorId","setConfirmTime","setVideoRequestIndex","activeTab","active","setActive","tab","getVideoRequest","getVideoInvite","updateVideoRequest","request","updatedVideoRequest","slice","updateVideoRequestSent","acceptRejectApiCall","inviteeId","acceptRejectRequest","cTime","showUserProfile","replace","dropzoneClick","stopPropagation","sm","UncontrolledDropdown","DropdownToggle","tag","pill","marginRight","DropdownMenu","wheelPropagation","fontWeight","TabContent","TabPane","tabId","Nav","borderBottomColor","tabs","NavItem","NavLink","classnames","accept","onDrop","acceptedFiles","getRootProps","getInputProps","lg","xl","loadFamousCard","queryParameter","URLSearchParams","r","toString","path","push"],"mappings":"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","file":"static/js/6.448beb01.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\n\nexport const fetchProfile = (data) => new Promise((resolve, reject) => {\n  const requestBody = { params: data };\n  axios.get('profile', requestBody)\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject(Error('no user data'));\n      }\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n\nexport const fetchSelfProfile = (token) => new Promise((resolve, reject) =>{\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.get('profile')\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject(Error('no user data'));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n      reject(error);\n    });\n});\n\nexport const addUserProfile = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.post('profile', data)\n    .then((res) => {\n      resolve('success');\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n\nexport const updateProfile = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.patch('profile', data)\n    .then((res) => {\n      resolve('success');\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n","module.exports = __webpack_public_path__ + \"static/media/unicoon.d0d24013.png\";","import axios from 'axios';\nimport firebase from '../../firebase/Firebase';\n\nexport const fetchFamousPosts = (lastItemId, token) => (dispatch) => {\n  dispatch({ type: 'LOAD_NEW_POSTS_PENDING' });\n  if (token) axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  const requestData = {\n    nextKey: lastItemId,\n    limit: 20,\n  };\n  const requestBody = { params: requestData };\n  axios.get('famousPost', requestBody).then((res) => {\n    // console.log(\"res \"+JSON.stringify(res.data))\n    if (res && res.data) {\n      dispatch({ type: 'LOAD_NEW_POSTS_SUCCESS' });\n      const { data } = res;\n      if (data.length > 0) {\n        const lastItemPostId = data[data.length - 1].postId;\n        dispatch({ type: 'LOADED_NEW_POSTS', payload: data });\n        dispatch({ type: 'UPDATE_LAST_ITEM', payload: lastItemPostId });\n      } else {\n        dispatch({ type: 'NO_MORE_ITEM' });\n      }\n    } else {\n      dispatch({ type: 'LOAD_NEW_POSTS_FAILURE' });\n    }\n  }).catch((error) => {\n    dispatch({ type: 'LOAD_NEW_POSTS_FAILURE' });\n    console.log(error);\n  });\n};\n\nexport const likeOrUnlikePost = (postId, incr, pos, token) => (dispatch) => {\n  dispatch({ type: 'POST_LIKE_SUCCESS', payload: { postId, pos } });\n\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  const data = {\n    postId,\n    increment: incr,\n  };\n\n  axios.post('setPostLikeSql', data).then((res) => {\n    if (res && res.data) {\n\n    } else {\n      dispatch({ type: 'POST_LIKE_FAILED', payload: { postId, pos } });\n    }\n  }).catch((error) => {\n    console.log(`error ${error} ${JSON.stringify(error.response)}`);\n    dispatch({ type: 'POST_LIKE_FAILED', payload: { postId, pos } });\n  });\n};\n\n// received\nexport const fetchVideoRequest = (token) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios\n    .get('receivedRequest')\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject('no data');\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      reject(error);\n    });\n});\n\n// sent\nexport const fetchVideoInvite = (token) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios\n    .get('sendRequest')\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject('no data');\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      reject(error);\n    });\n});\n\n// data = {inviteeId: to whom wamt to send invite, status: 0-> request, 1->accept, 2->reject}\nexport const postVideoCallRequest = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.post('sendRequest', data)\n    .then((res) => {\n      resolve('success');\n    }).catch((error) => {\n      reject(error);\n    });\n});\n\nexport const deleteVideoCallRequest = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  const requestBody = { data };\n  axios.delete('sendRequest', requestBody)\n    .then((res) => {\n      resolve('success');\n    }).catch((error) => {\n      reject(error);\n    });\n});\n","/* eslint-disable no-shadow */\n/* eslint-disable no-console */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Col, Card, Input, Button, Modal, ModalBody,\n} from 'reactstrap';\nimport {\n  FAILURE, PENDING, SUCCESS, generateProfileId,\n} from '../../common/util';\nimport firebase from '../../firebase/Firebase';\nimport logo from '../../img/unicoon.png';\nimport Spinner from '../../firebase/LoadingSpinner';\nimport { addUserProfile } from '../../redux/action/ProfileAction';\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('');\n  const [loader, setLoader] = useState(false);\n\n  const { loginStatus } = useSelector((state) => ({\n    loginStatus: state.login.loginStatus,\n  }));\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (loginStatus === PENDING) {\n      setLoader(true);\n    } else if (loginStatus === SUCCESS) {\n      setLoader(false);\n      props.closeLogin();\n    } else if (loginStatus === FAILURE) {\n      setLoader(false);\n    }\n  }, [loginStatus]);\n\n  const handleChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const sendEmailLink = () => {\n    if (email) {\n      const actionCodeSettings = {\n        // URL you want to redirect back to. The domain (www.example.com) for this\n        // URL must be whitelisted in the Firebase Console.\n        url: `${window.location.href}/${email}`,\n        handleCodeInApp: true,\n      };\n\n      firebase\n        .auth()\n        .sendSignInLinkToEmail(email, actionCodeSettings)\n        .then(() => {\n\n        })\n        .catch((error) => {\n          console.log('erroe send email', error);\n          // Some error occurred, you can inspect the code: error.code\n        });\n    } else {\n      console.log('no eamil');\n    }\n  };\n\n  const logoutUser = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {})\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const addProfile = (token, data) => {\n    setLoader(true);\n    addUserProfile(token, data)\n      .then(() => {\n        setLoader(false);\n        props.closeLogin();\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoader(false);\n      });\n  };\n\n  const sendUserInfo = (firebaseUser) => {\n    firebaseUser.getIdToken().then((token) => {\n      const { email } = firebaseUser;\n      const photo = firebaseUser.photoURL;\n      const fullName = firebaseUser.displayName;\n      const profileId = generateProfileId(email);\n      const data = {\n        name: fullName,\n        dp: photo,\n        email,\n        profileId,\n      };\n\n      addProfile(token, data);\n    }).catch((error) => {\n      console.log(error);\n      logoutUser();\n    });\n  };\n\n  const loginWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    dispatch({ type: 'LOGIN_PENDING' });\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        const { user } = result;\n        sendUserInfo(user);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const close = () => {\n    props.closeLogin();\n  };\n\n  return (\n    <Modal isOpen toggle={close} className=\"modal-lg\">\n      <ModalBody>\n        <div className=\"d-flex\">\n          <Col md=\"8\" className=\"text-center justify-content-center align-self-center offset-md-2\">\n            <Card className=\"pt-2 pb-2\">\n              <img src={logo} className=\"mx-auto\" alt=\"Famous wall\" style={{ height: '180px', width: '180px' }} />\n\n              <div className=\"text-center mt-4\">\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  onChange={handleChange}\n                  value={email}\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  required\n                  style={{ width: '85%' }}\n                  className=\"mx-auto\"\n                />\n\n                <Button\n                  className=\"mx-auto mt-2\"\n                  style={{ width: '200px' }}\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={sendEmailLink}\n                >\n                  Send me a login link\n                </Button>\n                <p className=\"font-weight-bold mt-6\">OR</p>\n                <Button\n                  className=\"mx-auto mt-2\"\n                  style={{ width: '200px' }}\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={loginWithGoogle}\n                >\n                  Login using Google\n                </Button>\n              </div>\n            </Card>\n          </Col>\n          {loader && <Spinner />}\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default Login;\n","/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/media-has-caption */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-console */\n/* eslint-disable no-shadow */\nimport React, { useContext } from 'react';\nimport {\n  Col,\n  Card,\n  CardBody,\n  Badge,\n  Row,\n} from 'reactstrap';\nimport { Heart, Video } from 'react-feather';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { IMAGE_MEDIA, VIDEO_MEDIA, MUSIC_MEDIA } from '../../common/util';\nimport { AuthContext } from '../../firebase/Auth';\nimport {\n  likeOrUnlikePost,\n} from '../../redux/action/homeAction';\n\nconst FamousCardView = (props) => {\n  const { currentUser } = useContext(AuthContext);\n\n  const { data } = props;\n  const { mimeType } = data;\n  const { mediaUrl } = data;\n  const { desc } = data;\n  const { userDp } = data;\n  const { userName } = data;\n  const { date } = data;\n  const { isLiked } = data;\n  const { creatorId } = data;\n  const { postId } = data;\n  const { profileId } = data;\n  const { pos } = props;\n  const dispatch = useDispatch();\n\n  const updateLikePost = () => {\n    if (currentUser) {\n      currentUser\n        .getIdToken()\n        .then((token) => {\n          const incr = isLiked === 0 ? 1 : 0;\n          dispatch(likeOrUnlikePost(postId, incr, pos, token));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      console.log('please login');\n      props.showLogin();\n    }\n  };\n\n  const requestVideoCall = () => {\n    props.sendRequest(creatorId);\n  };\n\n  const showProfile = () => {\n    props.showProfile(profileId);\n  };\n\n  return (\n    <div className=\"my-2\">\n      {/* {console.log(\"data in card \" + JSON.stringify(props))} */}\n      <Col>\n        <Card>\n          <CardBody className=\"mx-sm-auto\">\n            <Col style={{ height: 'auto', maxWidth: '460px' }}>\n              <div className=\"row ml-3 mt-2\" style={{ cursor: 'pointer' }} onClick={showProfile}>\n                <img\n                  src={userDp}\n                  alt={userName}\n                  className=\"rounded-sm mx-2 rounded-lg\"\n                  style={{ height: '36px', width: '36px' }}\n                />\n                <div className=\"float-left \">\n                  <p className=\"my-auto font-weight-bold\">{userName}</p>\n                  <p className=\"float-left\" style={{ fontSize: '12px' }}>\n                    {moment(date, 'x').fromNow()}\n                    {/** in response all is string so using x to format it */}\n                  </p>\n                </div>\n              </div>\n              <div className=\"my-2\">\n                {mimeType.includes(IMAGE_MEDIA) && (\n                <img\n                  src={mediaUrl}\n                  alt={userName}\n                  className=\"rounded-sm mx-2\"\n                  style={{ height: 'auto', width: '100%' }}\n                />\n                )}\n\n                {mimeType.includes(VIDEO_MEDIA) && (\n                <video\n                  src={mediaUrl}\n                  style={{ width: '100%', height: 'auto' }}\n                  controls\n                  autoPlay={false}\n                  className=\"rounded-sm mx-2 rounded-lg\"\n                  object-fit=\"cover\"\n                />\n                )}\n              </div>\n              {desc && (\n              <div className=\"row mt-2 mx-2\">\n                <p className=\"float-left font-weight-bold\">{desc}</p>\n              </div>\n              )}\n            </Col>\n            <Row className=\"mx-2\">\n              <div\n                className=\"justify-content-left p-2 my-auto\"\n                style={{ cursor: 'pointer' }}\n                onClick={updateLikePost}\n              >\n                <Heart\n                  style={{\n                    fill: isLiked === 1 ? 'red' : 'white',\n                    color: isLiked === 1 ? 'red' : 'black',\n                  }}\n                />\n              </div>\n              <div\n                className=\"justify-content-right p-2\"\n                onClick={requestVideoCall}\n              >\n                <Badge color=\"info\" className=\" mr-1 mb-1\" style={{ cursor: 'pointer' }}>\n                  <Col className=\"p-2\">\n                    <Video size={16} />\n                    <span className=\"font-weight-bold ml-1\">Request call</span>\n                  </Col>\n                </Badge>\n              </div>\n            </Row>\n          </CardBody>\n        </Card>\n      </Col>\n    </div>\n  );\n};\n\nexport default FamousCardView;\n","/* eslint-disable jsx-a11y/media-has-caption */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  Modal, ModalHeader, ModalBody, Row, Col, Button, Spinner,\n} from 'reactstrap';\nimport axios from 'axios';\nimport {\n  IMAGE_MEDIA, VIDEO_MEDIA, getHash, uploadMedia,\n} from '../../common/util';\nimport { AuthContext } from '../../firebase/Auth';\n\nconst UploadMedia = (props) => {\n  const { currentUser } = useContext(AuthContext);\n  const mediaType = props.mediaType ? props.mediaType : IMAGE_MEDIA;\n  const [postText, setPostText] = useState('');\n  const selectedMediaFile = props.file;\n  const [loader, setLoader] = useState(false);\n  const [loadMedia, setLoadMedia] = useState(false);\n  const [mediaSrc, setMediaSrc] = useState('');\n\n  const close = () => {\n    props.closeSelectedMedia();\n  };\n\n  useEffect(() => {\n    console.log(`media type ${mediaType} ${VIDEO_MEDIA}`);\n    if (mediaType === VIDEO_MEDIA) {\n      const reader = new FileReader();\n      reader.onabort = () => {\n        setLoadMedia(true);\n        console.log('file reading was aborted');\n      };\n      reader.onerror = () => {\n        setLoadMedia(true);\n        console.log('file reading has failed');\n      };\n      reader.onload = (e) => {\n        // Do whatever you want with the file contents\n        const binaryStr = e.target.result;\n        const blob = new Blob([binaryStr], { type: props.file.type }); // create a blob of buffer\n        const url = URL.createObjectURL(blob);\n        console.log(`${url} ${binaryStr}`);\n        setMediaSrc(url);\n        setLoadMedia(true);\n      };\n      reader.readAsArrayBuffer(props.file);\n    } else {\n      setMediaSrc(URL.createObjectURL(props.file));\n      setLoadMedia(true);\n    }\n  }, [mediaType, props.file]);\n\n  const updatePostText = (event) => {\n    const { value } = event.target;\n    setPostText(value);\n  };\n\n  const sendPost = (url) => {\n    currentUser.getIdToken().then((token) => {\n      const userId = currentUser.uid;\n      const currentDate = Date.now();\n      const postId = `${currentDate}_${getHash(userId)}`;\n      const data = {\n        mimeType: selectedMediaFile.type,\n        mediaUrl: url,\n        mediaThumbUrl: '',\n        desc: postText,\n        postId,\n      };\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n      axios.post('famousPost', data).then((res) => {\n        setLoader(false);\n        close();\n      }).catch((error) => {\n        setLoader(false);\n        console.log(error);\n      });\n    }).catch((error) => {\n      setLoader(false);\n      console.log(error);\n    });\n  };\n\n  const uploadTask = () => {\n    setLoader(true);\n    uploadMedia(selectedMediaFile, mediaType)\n      .then((url) => {\n        sendPost(url);\n      })\n      .catch((error) => {\n        props.closeSelectedMedia();\n        console.log(error);\n        setLoader(false);\n      });\n  };\n\n  return (\n    <Modal isOpen toggle={close} className=\"modal-lg\">\n      <ModalHeader toggle={close} className=\"bg-gradient-dark\">\n        Upload Media\n      </ModalHeader>\n      <ModalBody>\n        <Row>\n          <Col md={6} className=\"text-center\">\n            {(mediaType === VIDEO_MEDIA) && (\n              <video\n                style={{ maxWidth: '460px', height: 'auto' }}\n                src={mediaSrc}\n                controls\n                autoPlay={false}\n                className=\"rounded-sm mr-1 rounded-lg\"\n              />\n            )}\n            {(mediaType === IMAGE_MEDIA) && (\n              <img\n                src={mediaSrc}\n                alt=\"loading\"\n                style={{ maxWidth: '460px', height: 'auto' }}\n              />\n            )}\n            <input\n              className=\"mx-8 my-4 font-weight-bold\"\n              value={postText}\n              placeholder=\"your one liner\"\n              onChange={(event) => updatePostText(event)}\n            />\n            <Button\n              className=\"mx-auto mt-2\"\n              style={{ width: '200px' }}\n              color=\"primary\"\n              type=\"submit\"\n              onClick={uploadTask}\n            >\n              upload\n            </Button>\n            {(loader || !loadMedia) && <Spinner />}\n          </Col>\n        </Row>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default UploadMedia;\n","/* eslint-disable no-empty */\n/* eslint-disable consistent-return */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport {\n  Button, Col, Label, Modal, ModalBody, ModalFooter, Row,\n} from 'reactstrap';\nimport Flatpickr from 'react-flatpickr';\nimport moment from 'moment';\nimport { notify } from '../../common/util';\n\nconst SetVideoCallTime = (props) => {\n  const [callDate, setCallDate] = useState(new Date());\n  const [callTime, setCallTime] = useState(new Date());\n  const { requestorId, videoRequestIndex } = props;\n  const confirmTime = () => {\n    // selected date and time should be greater than current.\n    const selectedDate = moment(\n      callDate,\n    ).format('YYYY-MM-DD');\n    const selectTime = moment(\n      new Date(callTime),\n    ).format('HH:mm:ss');\n\n    if (!callDate || !callTime) {\n\n    } else if (moment(`${selectedDate} ${selectTime}`)\n      .utc().isBefore(moment().utc().valueOf())\n    ) {\n      notify(\"You can't set video call time in past date\", 'danger', 'Error!');\n      return false;\n    } else {\n      const dateTime = moment(`${selectedDate} ${selectTime}`).utc().format('YYYY-MM-DD HH:mm:ss');\n      props.confirmTime(requestorId, 1, dateTime, videoRequestIndex);\n    }\n  };\n\n  const close = () => {\n    props.close();\n  };\n\n  return (\n    <Modal isOpen toggle={close} className=\"modal-lg\">\n      <ModalBody>\n        <Row>\n          <Col>\n            <Label for=\"selectdate\" className=\"font-weight-bold\">\n              Select Date\n            </Label>\n            <Flatpickr\n              id=\"startTime\"\n              className=\"form-control bg-white\"\n              value={callDate}\n              options={{\n                minDate: 'today',\n              }}\n              onChange={(date) => {\n                setCallDate(date[0]);\n              }}\n            />\n          </Col>\n\n          <Col>\n            <Label for=\"selectTime\" className=\"font-weight-bold\">\n              Select Time\n            </Label>\n            <Flatpickr\n              id=\"startTime\"\n              className=\"form-control bg-white\"\n              options={{\n                enableTime: true,\n                noCalendar: true,\n                dateFormat: 'h:i K',\n              }}\n              value={callTime}\n              onChange={(date) => {\n                setCallTime(date);\n              }}\n            />\n          </Col>\n        </Row>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={confirmTime}>Confirm</Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default SetVideoCallTime;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  Button, Card, CardBody, Col,\n} from 'reactstrap';\nimport moment from 'moment';\nimport './VideoRequestList.css';\nimport { Delete } from 'react-feather';\n\nconst VideoRequestLists = (props) => {\n  const { videoRequests, type } = props;\n\n  const updateRequest = (item, index) => {\n    if (type === 0) {\n      props.updateRequest(item.userId, 2, index);\n    } else {\n      props.deleteRequest(item.id, index);\n    }\n  };\n  const videolist = (item, index) => {\n    if ((item.status === 2 && type === 0) || item.status === 3) return null;\n    const profileImg = item.userDp;\n    const name = item.userName;\n    return (\n      <Card className=\"m-1\" key={index}>\n        <CardBody className=\"p-0\" style={{ marginTop: '5px', marginBottom: '5px' }}>\n          <div className=\"col\" key={index}>\n            <Delete className=\"float-right mr-1\" style={{ cursor: 'pointer' }} onClick={() => updateRequest(item, index)} />\n            <div className=\"row\">\n              <img\n                src={profileImg}\n                className=\"requestorImg\"\n                alt={name}\n              />\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"col\">\n                    <p className=\"text-center font-weight-bold requestorName\">{name}</p>\n                  </div>\n                  {item.status === 0 && (\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      {type === 0 ? (\n                        <Button\n                          className=\"acceptButton\"\n                          color=\"primary\"\n                          onClick={() => props.updateRequest(item.userId, 1, index)}\n                        >\n                          Accept\n                        </Button>\n                      )\n                        : (<p>Pending</p>)}\n                    </div>\n                  </div>\n                  )}\n                  {item.status === 1 && (\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      {(((moment(item.updatedAt).valueOf() - Date.now() > 0) && (moment(item.updatedAt).valueOf() - Date.now()) <= 3605000)) ? (\n                        <Button\n                          className=\"acceptButton\"\n                          color=\"primary\"\n                          onClick={() => props.joinCallRequest(item)}\n                        >\n                          {`${'Join Call at \\n'}${moment(item.updatedAt).format('hh:mm:ss A')}`}\n                        </Button>\n                      )\n                        : (\n                          <p>\n                            {moment(item.updatedAt).fromNow()}\n                          </p>\n                        )}\n                    </div>\n                  </div>\n                  )}\n                  {item.status === 2 && (\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <p>Request denied</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  };\n  return (\n    <Col>\n      {videoRequests.map((item, index) => videolist(item, index))}\n\n    </Col>\n  );\n};\n\nexport default VideoRequestLists;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-no-comment-textnodes */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-console */\nimport React, { useState, useEffect, useContext } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport {\n  Card, Badge, Col, CardBody, Button, UncontrolledDropdown, DropdownToggle,\n  DropdownMenu, Row, TabContent, TabPane, Nav, NavItem, NavLink, Navbar, NavbarToggler, Collapse,\n} from 'reactstrap';\nimport { Video, Image, Music } from 'react-feather';\nimport Dropzone from 'react-dropzone';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport classnames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport FamousCardView from './FamousCardView';\nimport UploadMedia from './UploadMedia';\nimport {\n  VIDEO_MEDIA, IMAGE_MEDIA, PENDING, SUCCESS, FAILURE, notify,\n} from '../../common/util';\nimport {\n  fetchFamousPosts, fetchVideoInvite, fetchVideoRequest, postVideoCallRequest, deleteVideoCallRequest,\n} from '../../redux/action/homeAction';\nimport { AuthContext } from '../../firebase/Auth';\nimport Login from '../login/Login';\nimport Spinner from '../../firebase/LoadingSpinner';\nimport VideoRequestList from './VideoRequestList';\nimport SetVideoCallTime from './SetVideoCallTime';\nimport VideoRequestLists from './VideoRequestList/VideoRequestLists';\nimport firebase from '../../firebase/Firebase';\nimport './home.scss';\n\nconst Home = () => {\n  const { currentUser } = useContext(AuthContext);\n  const history = useHistory();\n\n  const {\n    famousPosts, lastItemId, hasMoreItems, loadItemStatus,\n  } = useSelector((state) => ({\n    famousPosts: state.home.famousPosts,\n    lastItemId: state.home.lastItemId,\n    hasMoreItems: state.home.hasMoreItems,\n    loadItemStatus: state.home.loadItemStatus,\n  }));\n  const [selectedMediaType, setSelectedMediaType] = useState('');\n  const [selectedMediaFile, setSelectedMediaFile] = useState('');\n  const [showSelectedMediaCard, setShowSelectedMediaCard] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [videoRequest, setVideoRequest] = useState([]);\n  const [videoRequestSent, setVideoRequestSent] = useState([]);\n  const [requestorId, setRequestorId] = useState('');\n  const [confirmTime, setConfirmTime] = useState(false);\n  const [videoRequestIndex, setVideoRequestIndex] = useState(0);\n  const [activeTab, setActiveTab] = useState('1');\n  const [active, setActive] = useState('1');\n\n  const dispatch = useDispatch();\n\n  const getVideoRequest = (token) => {\n    fetchVideoRequest(token)\n      .then((res) => {\n        setVideoRequest(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const getVideoInvite = (token) => {\n    fetchVideoInvite(token)\n      .then((res) => {\n        setVideoRequestSent(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const toggle = (tab) => {\n    if (active !== tab) {\n      setActive(tab);\n    }\n  };\n\n  useEffect(() => {\n    if (currentUser) {\n      currentUser.getIdToken().then((token) => {\n        dispatch(fetchFamousPosts(lastItemId, token));\n        getVideoRequest(token);\n        getVideoInvite(token);\n      }).catch((error) => {\n        console.log(error);\n      });\n    } else {\n      dispatch(fetchFamousPosts(lastItemId));\n    }\n  }, [currentUser]);\n\n  const joinCallRequest = (item) => {\n    const { id } = item;\n    const queryData = {\n      r: id,\n    };\n    const urlSearchParams = new URLSearchParams(queryData);\n    const queryParameter = urlSearchParams.toString();\n    const path = `/videocall?${queryParameter}`;\n    history.push(path);\n  };\n\n  const updateVideoRequest = (status, index) => {\n    const request = videoRequest[index];\n    request.status = status;\n    // eslint-disable-next-line max-len\n    const updatedVideoRequest = [\n      ...videoRequest.slice(0, index),\n      request,\n      ...videoRequest.slice(index + 1),\n    ];\n    setVideoRequest(updatedVideoRequest);\n  };\n\n  const updateVideoRequestSent = (status, index) => {\n    const request = videoRequestSent[index];\n    request.status = status;\n    // eslint-disable-next-line max-len\n    const updatedVideoRequest = [\n      ...videoRequest.slice(0, index),\n      request,\n      ...videoRequest.slice(index + 1),\n    ];\n    setVideoRequestSent(updatedVideoRequest);\n  };\n\n  const deleteCallRequest = (id, index) => {\n    updateVideoRequestSent(3, index);\n    setShowLoader(true);\n    const data = {\n      id,\n    };\n    currentUser\n      .getIdToken()\n      .then((token) => {\n        deleteVideoCallRequest(token, data)\n          .then((res) => {\n            console.log(`video call req ${res}`);\n            setShowLoader(false);\n          })\n          .catch((error) => {\n            updateVideoRequestSent(2, index);\n            console.log(JSON.stringify(error));\n            setShowLoader(false);\n          });\n      })\n      .catch((error) => {\n        updateVideoRequest(2, index);\n        console.error(error);\n        setShowLoader(false);\n      });\n  };\n\n  const acceptRejectApiCall = (userId, status, callTime, index) => {\n    updateVideoRequest(status, index);\n    setConfirmTime(false);\n    setShowLoader(true);\n    const data = {\n      inviteeId: userId,\n      status, // 0 means request\n    };\n    data.callTime = callTime;\n    currentUser\n      .getIdToken()\n      .then((token) => {\n        postVideoCallRequest(token, data)\n          .then((res) => {\n            console.log(`video call req ${res}`);\n            setShowLoader(false);\n          })\n          .catch((error) => {\n            updateVideoRequest(0, index);\n            console.log(JSON.stringify(error));\n            setShowLoader(false);\n          });\n      })\n      .catch((error) => {\n        updateVideoRequest(0, index);\n        console.log(error);\n        setShowLoader(false);\n      });\n  };\n\n  const acceptRejectRequest = (userId, status, index) => {\n    setVideoRequestIndex(index);\n    if (status === 1) {\n      setRequestorId(userId);\n      setConfirmTime(true);\n    } else {\n      const cTime = moment().utc().format('YYYY-MM-DD HH:mm:ss');\n      acceptRejectApiCall(userId, status, cTime, index);\n    }\n  };\n\n  useEffect(() => {\n    console.log(`lis ${loadItemStatus}`);\n    if (loadItemStatus === PENDING) {\n      setShowLoader(true);\n    } else if (loadItemStatus === SUCCESS) {\n      setShowLoader(false);\n    } else if (loadItemStatus === FAILURE) {\n      setShowLoader(false);\n    }\n  }, [loadItemStatus]);\n\n  const closeSelectedMediaCard = () => {\n    setShowSelectedMediaCard(false);\n  };\n\n  const sendRequest = (creatorId) => {\n    setShowLoader(true);\n    const cTime = moment().utc().format('YYYY-MM-DD HH:mm:ss');\n    const data = {\n      inviteeId: creatorId,\n      callTime: cTime,\n      status: 0, // 0 means request\n    };\n    if (currentUser) {\n      currentUser\n        .getIdToken()\n        .then((token) => {\n          postVideoCallRequest(token, data)\n            .then((res) => {\n              setShowLoader(false);\n              notify('Sent the request successfully', 'success');\n              console.log(`video call req ${res}`);\n            })\n            .catch((error) => {\n              setShowLoader(false);\n              notify('Oops! something went wrong. Try again', 'danger');\n              console.log(error);\n            });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      setShowLoader(false);\n      setShowLogin(true);\n    }\n  };\n\n  const showUserProfile = (profileId) => {\n    history.replace(`/profile/${profileId}`);\n  };\n\n  const loadFamousCard = (item, index) => {\n    console.log(`item ${item.mimeType}`);\n    return (\n      <FamousCardView\n        key={index}\n        data={item}\n        pos={index}\n        showProfile={showUserProfile}\n        sendRequest={sendRequest}\n      />\n    );\n  };\n\n  const dropzoneClick = (event) => {\n    console.log(`dropzone ${event} ${currentUser}`);\n    if (!currentUser) {\n      event.stopPropagation();\n      setShowLogin(true);\n    }\n  };\n\n  const hideLogin = () => {\n    setShowLogin(false);\n  };\n\n  return (\n    <div>\n      {/* <Navbar className=\"bg-dark navbar-dark sticky-top\" expand=\"md\">\n        <NavbarToggler onClick={toggleNav} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n            <NavItem style={{ display: currentUser ? 'block' : 'none' }}>\n              <NavLink\n                style={{ display: currentUser ? 'block' : 'none', cursor: 'pointer' }}\n                onClick={() => openSelfProfile()}\n              >\n                Profile\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                style={{ display: currentUser ? 'block' : 'none', cursor: 'pointer' }}\n                onClick={() => logout()}\n              >\n                Logout\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar> */}\n      <Row style={{ marginTop: '48px' }}>\n        <Col md={4} sm={6} className=\"mx-auto mt-2\">\n          <Card>\n            <CardBody>\n              {currentUser && videoRequest && videoRequest.length > 0 && (\n                <UncontrolledDropdown className=\"d-md-none\">\n                  <DropdownToggle\n                    tag=\"small\"\n                    className=\"text-bold-500 cursor-pointer\"\n                  >\n                    <div className=\"d-flex justify-content-end mb-2\">\n                      <Badge color=\"success\" className=\" mr-1 mb-1\">\n                        {videoRequest && videoRequest.length > 0 && (\n                          <Badge\n                            pill\n                            color=\"danger\"\n                            className=\"p-1 badge-up float-right\"\n                            style={{\n                              marginRight: -8,\n                              marginTop: -6,\n                              fontSize: '12px',\n                            }}\n                          >\n                            {videoRequest.length}\n                          </Badge>\n                        )}\n                        <Col className=\"p-2\" style={{ cursor: 'pointer' }}>\n                          <Video size={16} />\n                          <span className=\"font-weight-bold ml-1\">\n                            Call request\n                          </span>\n                        </Col>\n                      </Badge>\n                    </div>\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <PerfectScrollbar\n                      options={{\n                        wheelPropagation: false,\n                      }}\n                    >\n                      <div style={{ width: '35vh' }}>\n                        <p className=\"m-1\" style={{ fontWeight: 'bold' }}>\n                          Video Call Request\n                        </p>\n\n                        <TabContent activeTab={activeTab}>\n                          <TabPane tabId=\"1\">\n                            <Nav\n                              className=\"justify-content-center\"\n                              style={{ borderBottomColor: 'white' }}\n                              tabs\n                            >\n                              <NavItem className=\"d-inline-block\">\n                                <NavLink\n                                  className={classnames({\n                                    active: active === '1',\n                                  })}\n                                  onClick={() => {\n                                    toggle('1');\n                                  }}\n                                >\n                                  <p className=\"m-0\" style={{ color: 'white' }}>\n                                    Received\n                                  </p>\n                                </NavLink>\n                              </NavItem>\n                              <NavItem className=\"d-inline-block\">\n                                <NavLink\n                                  className={classnames({\n                                    active: active === '2',\n                                  })}\n                                  onClick={() => {\n                                    toggle('2');\n                                  }}\n                                >\n                                  <p className=\"m-0\" style={{ color: 'white' }}>\n                                    Sent\n                                  </p>\n                                </NavLink>\n                              </NavItem>\n                            </Nav>\n                            <TabContent className=\"py-50\" activeTab={active}>\n                              <TabPane tabId=\"1\">\n                                <VideoRequestLists\n                                  updateRequest={acceptRejectRequest}\n                                  videoRequests={videoRequest}\n                                  type={0}\n                                />\n                              </TabPane>\n                              <TabPane tabId=\"2\">\n                                <VideoRequestLists\n                                  updateRequest={acceptRejectRequest}\n                                  videoRequests={videoRequestSent}\n                                  type={1}\n                                />\n                              </TabPane>\n                            </TabContent>\n                          </TabPane>\n                        </TabContent>\n                      </div>\n                    </PerfectScrollbar>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              )}\n              <p className=\"font-weight-bold\">Make yourself famous</p>\n              {currentUser && (\n                <div className=\"d-flex justify-content-between pl-2 pr-2\">\n                  <Dropzone\n                    accept=\"video/*\"\n                    onDrop={(acceptedFiles) => {\n                      console.log(acceptedFiles);\n                      setSelectedMediaFile(acceptedFiles[0]);\n                      setSelectedMediaType(VIDEO_MEDIA);\n                      setShowSelectedMediaCard(true);\n                    }}\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div\n                          style={{ cursor: 'pointer' }}\n                          {...getRootProps({\n                            onClick: (event) => dropzoneClick(event),\n                          })}\n                        >\n                          <input {...getInputProps()} />\n                          <Badge pill color=\"info\" className=\"mr-1 mb-1\">\n                            <Video size={16} className=\"mr-2\" />\n                            Video\n                          </Badge>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                  <Dropzone\n                    accept=\"image/*\"\n                    onDrop={(acceptedFiles) => {\n                      console.log(acceptedFiles);\n                      setSelectedMediaFile(acceptedFiles[0]);\n                      setSelectedMediaType(IMAGE_MEDIA);\n                      setShowSelectedMediaCard(true);\n                    }}\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div\n                          style={{ cursor: 'pointer' }}\n                          {...getRootProps({\n                            onClick: (event) => dropzoneClick(event),\n                          })}\n                        >\n                          <input {...getInputProps()} />\n                          <Badge pill color=\"info\" className=\"mr-1 mb-1\">\n                            <Image size={16} className=\"mr-2\" />\n                            Image\n                          </Badge>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                  <Dropzone\n                    accept=\"audio/*\"\n                    onDrop={(acceptedFiles) => console.log(acceptedFiles)}\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div\n                          style={{ cursor: 'pointer' }}\n                          {...getRootProps({\n                            onClick: (event) => dropzoneClick(event),\n                          })}\n                        >\n                          <input {...getInputProps()} />\n                          <Badge pill color=\"info\" className=\"mr-1 mb-1\">\n                            <Music size={16} className=\"mr-2\" />\n                            Audio\n                          </Badge>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                </div>\n              )}\n              {!currentUser && (\n                <Button className=\"primary\" onClick={() => setShowLogin(true)}>\n                  Please Login\n                  {' '}\n                </Button>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={7} lg={8} xl={9}>\n          <div className=\"mx-auto\">\n            {/* <InfiniteScroll\n          pageStart={0}\n          loadMore={loadMoreItems}\n          hasMore={hasMoreItems}\n          loader={<Spinner />}> */}\n            {famousPosts\n              && famousPosts.map((item, index) => loadFamousCard(item, index))}\n            {/* </InfiniteScroll> */}\n          </div>\n        </Col>\n        {currentUser\n          && ((videoRequest && videoRequest.length > 0)\n            || (videoRequestSent && videoRequestSent.length > 0)) && (\n            <Col md={5} lg={4} xl={3} className=\"d-none d-md-block float-right\">\n              <Card>\n                <p className=\"m-1\" style={{ fontWeight: 'bold' }}>\n                  Video Call Request\n                </p>\n                <CardBody>\n                  <TabContent activeTab={activeTab}>\n                    <TabPane tabId=\"1\">\n                      <Nav\n                        className=\"justify-content-center\"\n                        style={{ borderBottomColor: 'white' }}\n                        tabs\n                      >\n                        <NavItem className=\"d-inline-block\">\n                          <NavLink\n                            className={classnames({\n                              active: active === '1',\n                            })}\n                            onClick={() => {\n                              toggle('1');\n                            }}\n                          >\n                            <p className=\"m-0\" style={{ color: 'white' }}>\n                              Received\n                            </p>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem className=\"d-inline-block\">\n                          <NavLink\n                            className={classnames({\n                              active: active === '2',\n                            })}\n                            onClick={() => {\n                              toggle('2');\n                            }}\n                          >\n                            <p className=\"m-0\" style={{ color: 'white' }}>\n                              Sent\n                            </p>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                      <TabContent className=\"py-50\" activeTab={active}>\n                        <TabPane tabId=\"1\">\n                          <VideoRequestLists\n                            updateRequest={acceptRejectRequest}\n                            type={0}\n                            videoRequests={videoRequest}\n                          />\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                          <VideoRequestLists\n                            joinCallRequest={joinCallRequest}\n                            deleteRequest={deleteCallRequest}\n                            type={1}\n                            videoRequests={videoRequestSent}\n                          />\n                        </TabPane>\n                      </TabContent>\n                    </TabPane>\n                  </TabContent>\n                </CardBody>\n              </Card>\n            </Col>\n        )}\n      </Row>\n      {showSelectedMediaCard && (\n        <UploadMedia\n          mediaType={selectedMediaType}\n          file={selectedMediaFile}\n          closeSelectedMedia={() => closeSelectedMediaCard()}\n        />\n      )}\n      {showLogin && <Login closeLogin={() => hideLogin()} />}\n      {showLoader && <Spinner />}\n      {confirmTime && (\n        <SetVideoCallTime\n          confirmTime={acceptRejectApiCall}\n          close={() => setConfirmTime(false)}\n          requestorId={requestorId}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}