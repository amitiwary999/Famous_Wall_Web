{"version":3,"sources":["redux/action/ProfileAction.js","img/unicoon.png","redux/action/homeAction.js","view/login/Login.js","view/profile/Profle.js"],"names":["fetchProfile","data","Promise","resolve","reject","requestBody","params","axios","get","then","res","Error","catch","error","fetchSelfProfile","token","defaults","headers","common","Authorization","console","addUserProfile","post","updateProfile","patch","module","exports","fetchFamousPosts","lastItemId","dispatch","type","nextKey","limit","length","lastItemPostId","postId","payload","log","likeOrUnlikePost","incr","pos","increment","JSON","stringify","response","fetchVideoRequest","fetchVideoInvite","postVideoCallRequest","deleteVideoCallRequest","delete","Login","props","useState","email","setEmail","loader","setLoader","loginStatus","useSelector","state","login","useDispatch","useEffect","PENDING","SUCCESS","closeLogin","FAILURE","sendUserInfo","firebaseUser","getIdToken","photo","photoURL","addProfile","name","displayName","dp","profileId","generateProfileId","firebase","auth","signOut","isOpen","toggle","className","md","src","logo","alt","style","height","width","onChange","e","target","value","id","placeholder","required","color","onClick","actionCodeSettings","url","window","location","href","handleCodeInApp","sendSignInLinkToEmail","provider","GoogleAuthProvider","signInWithPopup","result","user","Profile","currentUser","useContext","AuthContext","sanitizer","dompurify","sanitize","useLocation","pathname","split","showLogin","setShowLogin","showLoader","setShowLoader","imageLoader","showImageLoader","editAbout","setEditAbout","userProfile","setUserProfile","selfProfile","initialValues","userBio","RichTextEditor","createEmptyValue","useFormless","values","setValue","errors","inputProps","createValueFromString","fetchUserProfile","profile","uploadDp","mediaFile","uploadMedia","IMAGE_MEDIA","userDp","saveProfileDp","notify","position","userName","borderRadius","left","bottom","accept","onDrop","acceptedFiles","getRootProps","getInputProps","cursor","cTime","moment","utc","format","inviteeId","userId","callTime","status","toString","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/7.fc50da64.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\n\nexport const fetchProfile = (data) => new Promise((resolve, reject) => {\n  const requestBody = { params: data };\n  axios.get('profile', requestBody)\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject(Error('no user data'));\n      }\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n\nexport const fetchSelfProfile = (token) => new Promise((resolve, reject) =>{\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.get('profile')\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject(Error('no user data'));\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n      reject(error);\n    });\n});\n\nexport const addUserProfile = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.post('profile', data)\n    .then((res) => {\n      resolve('success');\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n\nexport const updateProfile = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.patch('profile', data)\n    .then((res) => {\n      resolve('success');\n    })\n    .catch((error) => {\n      reject(error);\n    });\n});\n","module.exports = __webpack_public_path__ + \"static/media/unicoon.d0d24013.png\";","import axios from 'axios';\nimport firebase from '../../firebase/Firebase';\n\nexport const fetchFamousPosts = (lastItemId, token) => (dispatch) => {\n  dispatch({ type: 'LOAD_NEW_POSTS_PENDING' });\n  if (token) axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  const requestData = {\n    nextKey: lastItemId,\n    limit: 20,\n  };\n  const requestBody = { params: requestData };\n  axios.get('famousPost', requestBody).then((res) => {\n    // console.log(\"res \"+JSON.stringify(res.data))\n    if (res && res.data) {\n      dispatch({ type: 'LOAD_NEW_POSTS_SUCCESS' });\n      const { data } = res;\n      if (data.length > 0) {\n        const lastItemPostId = data[data.length - 1].postId;\n        dispatch({ type: 'LOADED_NEW_POSTS', payload: data });\n        dispatch({ type: 'UPDATE_LAST_ITEM', payload: lastItemPostId });\n      } else {\n        dispatch({ type: 'NO_MORE_ITEM' });\n      }\n    } else {\n      dispatch({ type: 'LOAD_NEW_POSTS_FAILURE' });\n    }\n  }).catch((error) => {\n    dispatch({ type: 'LOAD_NEW_POSTS_FAILURE' });\n    console.log(error);\n  });\n};\n\nexport const likeOrUnlikePost = (postId, incr, pos, token) => (dispatch) => {\n  dispatch({ type: 'POST_LIKE_SUCCESS', payload: { postId, pos } });\n\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  const data = {\n    postId,\n    increment: incr,\n  };\n\n  axios.post('setPostLikeSql', data).then((res) => {\n    if (res && res.data) {\n\n    } else {\n      dispatch({ type: 'POST_LIKE_FAILED', payload: { postId, pos } });\n    }\n  }).catch((error) => {\n    console.log(`error ${error} ${JSON.stringify(error.response)}`);\n    dispatch({ type: 'POST_LIKE_FAILED', payload: { postId, pos } });\n  });\n};\n\n// received\nexport const fetchVideoRequest = (token) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios\n    .get('receivedRequest')\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject('no data');\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      reject(error);\n    });\n});\n\n// sent\nexport const fetchVideoInvite = (token) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios\n    .get('sendRequest')\n    .then((res) => {\n      if (res && res.data) {\n        resolve(res.data);\n      } else {\n        reject('no data');\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      reject(error);\n    });\n});\n\n// data = {inviteeId: to whom wamt to send invite, status: 0-> request, 1->accept, 2->reject}\nexport const postVideoCallRequest = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  axios.post('sendRequest', data)\n    .then((res) => {\n      resolve('success');\n    }).catch((error) => {\n      reject(error);\n    });\n});\n\nexport const deleteVideoCallRequest = (token, data) => new Promise((resolve, reject) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  const requestBody = { data };\n  axios.delete('sendRequest', requestBody)\n    .then((res) => {\n      resolve('success');\n    }).catch((error) => {\n      reject(error);\n    });\n});\n","/* eslint-disable no-shadow */\n/* eslint-disable no-console */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Col, Card, Input, Button, Modal, ModalBody,\n} from 'reactstrap';\nimport {\n  FAILURE, PENDING, SUCCESS, generateProfileId,\n} from '../../common/util';\nimport firebase from '../../firebase/Firebase';\nimport logo from '../../img/unicoon.png';\nimport Spinner from '../../firebase/LoadingSpinner';\nimport { addUserProfile } from '../../redux/action/ProfileAction';\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('');\n  const [loader, setLoader] = useState(false);\n\n  const { loginStatus } = useSelector((state) => ({\n    loginStatus: state.login.loginStatus,\n  }));\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (loginStatus === PENDING) {\n      setLoader(true);\n    } else if (loginStatus === SUCCESS) {\n      setLoader(false);\n      props.closeLogin();\n    } else if (loginStatus === FAILURE) {\n      setLoader(false);\n    }\n  }, [loginStatus]);\n\n  const handleChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const sendEmailLink = () => {\n    if (email) {\n      const actionCodeSettings = {\n        // URL you want to redirect back to. The domain (www.example.com) for this\n        // URL must be whitelisted in the Firebase Console.\n        url: `${window.location.href}/${email}`,\n        handleCodeInApp: true,\n      };\n\n      firebase\n        .auth()\n        .sendSignInLinkToEmail(email, actionCodeSettings)\n        .then(() => {\n\n        })\n        .catch((error) => {\n          console.log('erroe send email', error);\n          // Some error occurred, you can inspect the code: error.code\n        });\n    } else {\n      console.log('no eamil');\n    }\n  };\n\n  const logoutUser = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {})\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const addProfile = (token, data) => {\n    setLoader(true);\n    addUserProfile(token, data)\n      .then(() => {\n        setLoader(false);\n        props.closeLogin();\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoader(false);\n      });\n  };\n\n  const sendUserInfo = (firebaseUser) => {\n    firebaseUser.getIdToken().then((token) => {\n      const { email } = firebaseUser;\n      const photo = firebaseUser.photoURL;\n      const fullName = firebaseUser.displayName;\n      const profileId = generateProfileId(email);\n      const data = {\n        name: fullName,\n        dp: photo,\n        email,\n        profileId,\n      };\n\n      addProfile(token, data);\n    }).catch((error) => {\n      console.log(error);\n      logoutUser();\n    });\n  };\n\n  const loginWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    dispatch({ type: 'LOGIN_PENDING' });\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        const { user } = result;\n        sendUserInfo(user);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const close = () => {\n    props.closeLogin();\n  };\n\n  return (\n    <Modal isOpen toggle={close} className=\"modal-lg\">\n      <ModalBody>\n        <div className=\"d-flex\">\n          <Col md=\"8\" className=\"text-center justify-content-center align-self-center offset-md-2\">\n            <Card className=\"pt-2 pb-2\">\n              <img src={logo} className=\"mx-auto\" alt=\"Famous wall\" style={{ height: '180px', width: '180px' }} />\n\n              <div className=\"text-center mt-4\">\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  onChange={handleChange}\n                  value={email}\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  required\n                  style={{ width: '85%' }}\n                  className=\"mx-auto\"\n                />\n\n                <Button\n                  className=\"mx-auto mt-2\"\n                  style={{ width: '200px' }}\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={sendEmailLink}\n                >\n                  Send me a login link\n                </Button>\n                <p className=\"font-weight-bold mt-6\">OR</p>\n                <Button\n                  className=\"mx-auto mt-2\"\n                  style={{ width: '200px' }}\n                  color=\"primary\"\n                  type=\"submit\"\n                  onClick={loginWithGoogle}\n                >\n                  Login using Google\n                </Button>\n              </div>\n            </Card>\n          </Col>\n          {loader && <Spinner />}\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default Login;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Button, Card, CardBody, Col, Row, Spinner,\n} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CheckCircle, Edit, X } from 'react-feather';\nimport Dropzone from 'react-dropzone';\nimport RichTextEditor from 'react-rte';\nimport dompurify from 'dompurify';\nimport useFormless from 'react-useformless';\nimport moment from 'moment';\nimport { fetchProfile, fetchSelfProfile, updateProfile } from '../../redux/action/ProfileAction';\nimport { AuthContext } from '../../firebase/Auth';\nimport { IMAGE_MEDIA, notify, uploadMedia } from '../../common/util';\nimport './profile.scss';\nimport { postVideoCallRequest } from '../../redux/action/homeAction';\nimport Login from '../login/Login';\n\nconst Profile = () => {\n  const { currentUser } = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const sanitizer = dompurify.sanitize;\n\n  const location = useLocation();\n  const pathName = location.pathname;\n  const pathSplit = pathName.split('/');\n  const profileId = pathSplit[2];\n  const [showLogin, setShowLogin] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const [imageLoader, showImageLoader] = useState(false);\n  const [editAbout, setEditAbout] = useState(false);\n  const [userProfile, setUserProfile] = useState({ });\n\n  const { selfProfile } = useSelector((state) => ({\n    selfProfile: state.selfProfile.selfProfile,\n  }));\n\n  const initialValues = { userBio: RichTextEditor.createEmptyValue() };\n  const {\n    values, errors, setValue, inputProps,\n  } = useFormless({\n    initialValues,\n  });\n\n  useEffect(() => {\n    if (selfProfile.userBio) {\n      setValue('userBio', RichTextEditor.createValueFromString(selfProfile.userBio, 'html'));\n    }\n\n    setUserProfile(selfProfile);\n  }, [selfProfile]);\n\n  const fetchOwnProfile = () => {\n    currentUser.getIdToken().then((token) => {\n      fetchSelfProfile(token).then((profile) => {\n        if (profile.userBio) {\n          setValue('userBio', RichTextEditor.createValueFromString(selfProfile.userBio, 'html'));\n        }\n\n        setUserProfile(profile);\n      }).catch((error) => {\n        console.error(error);\n      });\n    });\n  };\n\n  const fetchUserProfile = () => {\n    const data = { profileId };\n    fetchProfile(data)\n      .then((res) => {\n        if (res.userBio) {\n          setValue('userBio', RichTextEditor.createValueFromString(selfProfile.userBio, 'html'));\n        }\n\n        setUserProfile(res);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    if (profileId) {\n      fetchUserProfile();\n    } else {\n      fetchOwnProfile();\n    }\n  }, []);\n\n  const saveProfileDp = (dp) => {\n    const data = userProfile;\n    data.userDp = dp;\n    currentUser.getIdToken().then((token) => {\n      updateProfile(token, data)\n        .then((res) => {\n          setUserProfile(data);\n          showImageLoader(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          showImageLoader(false);\n        });\n    });\n  };\n\n  const uploadDp = (mediaFile) => {\n    showImageLoader(true);\n    uploadMedia(mediaFile, IMAGE_MEDIA)\n      .then((url) => {\n        saveProfileDp(url);\n      })\n      .catch((error) => {\n        console.error(error);\n        showImageLoader(false);\n        notify('Oops! Something went wrong', 'danger', 'Error');\n      });\n  };\n\n  const onAboutChange = (value) => {\n    setValue('userBio', RichTextEditor.createValueFromString(value, 'html'));\n  };\n\n  const saveAbout = () => {\n    if (values.userBio.toString('html')) {\n      const data = userProfile;\n      data.userBio = values.userBio.toString('html');\n\n      currentUser.getIdToken().then((token) => {\n        updateProfile(token, data)\n          .then((res) => {\n            setUserProfile(data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      });\n    }\n  };\n\n  const sendVideoCallRequest = () => {\n    setShowLoader(true);\n    const cTime = moment().utc().format('YYYY-MM-DD HH:mm:ss');\n    const data = {\n      inviteeId: userProfile.userId,\n      callTime: cTime,\n      status: 0, // 0 means request\n    };\n    if (currentUser) {\n      currentUser\n        .getIdToken()\n        .then((token) => {\n          postVideoCallRequest(token, data)\n            .then((res) => {\n              setShowLoader(false);\n              notify('Sent the request successfully', 'success');\n              console.log(`video call req ${res}`);\n            })\n            .catch((error) => {\n              setShowLoader(false);\n              notify('Oops! something went wrong. Try again', 'danger');\n              console.log(error);\n            });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      setShowLoader(false);\n      setShowLogin(true);\n    }\n  };\n\n  return (\n    <div>\n      <Col className=\"mx-auto\" md={5}>\n        <Card>\n          <CardBody>\n            <div>\n              <div style={{ position: 'relative' }}>\n                <img\n                  src={userProfile.userDp}\n                  alt={userProfile.userName}\n                  style={{ width: '144px', height: '144px', borderRadius: '50%' }}\n                />\n                {imageLoader && (\n                <div className=\"overlay\">\n                  <Spinner />\n                </div>\n                )}\n              </div>\n\n              {userProfile.selfProfile && (\n              <div style={{ left: '55%', bottom: '25%', position: 'absolute' }}>\n                <Dropzone\n                  accept=\"image/*\"\n                  onDrop={(acceptedFiles) => {\n                    console.log(acceptedFiles);\n                    uploadDp(acceptedFiles[0]);\n                  }}\n                >\n                  {({ getRootProps, getInputProps }) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Edit style={{\n                          width: '24px', height: '24px', cursor: 'pointer',\n                        }}\n                        />\n                      </div>\n                    </section>\n                  )}\n\n                </Dropzone>\n              </div>\n              )}\n            </div>\n            <div>\n              <p>{userProfile.userName}</p>\n              {!userProfile.selfProfile && (<Button onClick={sendVideoCallRequest}>Request Call</Button>)}\n            </div>\n\n          </CardBody>\n        </Card>\n        <Card className=\"mt-2\">\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"col float-left\">\n                  <p className=\"float-left font-weight-bold\">About Me</p>\n                </div>\n                <div className=\"col float-left\">\n                  {!editAbout ? (\n                    <p\n                      className=\"float-left\"\n                      dangerouslySetInnerHTML={{\n                        __html: sanitizer(\n                          userProfile.userBio,\n                        ),\n                      }}\n                    />\n                  ) : (\n                    <div>\n                      <RichTextEditor value={values.userBio} onChange={onAboutChange} />\n                      <div className=\"float-right\">\n                        <button\n                          onClick={saveAbout}\n                          className=\"btn btn-primary btn-sm mt-1 mr-1 mb-2\"\n                        >\n                          <CheckCircle />\n                        </button>\n                        <button\n                          onClick={() => {\n                            setValue('userBio', RichTextEditor.createValueFromString(selfProfile.userBio, 'html'));\n                            setEditAbout(false);\n                          }}\n                          className=\"btn btn-danger btn-sm mb-2 mt-1\"\n                        >\n                          <X />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </Col>\n              {userProfile.selfProfile && <Edit onClick={() => setEditAbout(true)} />}\n            </Row>\n          </CardBody>\n        </Card>\n        {showLoader && <Spinner style={{ position: 'absolute' }} />}\n        {showLogin && <Login closeLogin={() => setShowLogin(false)} />}\n\n      </Col>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}